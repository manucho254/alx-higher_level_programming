""" class BaseGeometry (based on 6-base_geometry.py).

    Public instance method: def area(self): that raises an Exception with the message area() is not implemented
    Public instance method: def integer_validator(self, name, value): that validates value:
        you can assume name is always a string
        if value is not an integer: raise a TypeError exception, with the message <name> must be an integer
        if value is less or equal to 0: raise a ValueError exception with the message <name> must be greater than 0

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
   ...
TypeError: <name> must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
   ...
ValueError: <name> must be greater than 0
>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
   ...
ValueError: <name> must be greater than 0

"""
